<!doctype html public "-//w3c//dtd html 4.0 transitional//en">                 <html><head>
<title>Static Call Graph - [E:\miniOS_QQ2440\miniOS_Data\DebugRel\miniOS.axf]</title>
</head>
<body><HR>
<H1>Static Call Graph for image E:\miniOS_QQ2440\miniOS_Data\DebugRel\miniOS.axf</H1><HR>
<BR><P><STRONG>Maximum Stack Usage =         64 bytes + Unknown
</STRONG><HR><P><STRONG><a name="[31c15c0]"></a>xmain</STRONG> (ARM, 452 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31bc878]">&gt&gt</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[31bc808]">&gt&gt</a>&nbsp;&nbsp;&nbsp;led_init
<LI><a href="#[31bc798]">&gt&gt</a>&nbsp;&nbsp;&nbsp;key_init
<LI><a href="#[31bc728]">&gt&gt</a>&nbsp;&nbsp;&nbsp;init_buzzer
<LI><a href="#[31bc6bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;beep
<LI><a href="#[31bc64c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;irq_init
<LI><a href="#[31bc5dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Timer0_init
<LI><a href="#[31bc570]">&gt&gt</a>&nbsp;&nbsp;&nbsp;printk
<LI><a href="#[31bc500]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sched_init
</UL><BR>[Address Reference Count : 1]<UL><LI> start.o(Start)
</UL><P><STRONG><a name="[31c137c]"></a>__create_page_tables_early</STRONG> (ARM, 192 bytes, Stack size 4 bytes, page_table.o(.text))
<BR>[Called By]<UL><LI><a href="#[31c326c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Start
</UL><P><STRONG><a name="[31f25cc]"></a>IDCaches_Restart</STRONG> (ARM, 36 bytes, Stack size 0 bytes, page_table.o(.text))
<BR>[Called By]<UL><LI><a href="#[31c1288]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__create_page_tables_post
</UL><P><STRONG><a name="[31c1288]"></a>__create_page_tables_post</STRONG> (ARM, 76 bytes, Stack size 0 bytes, page_table.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31f25cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;IDCaches_Restart
</UL><BR>[Called By]<UL><LI><a href="#[31c326c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Start
</UL><P><STRONG><a name="[31f0c80]"></a>isBootFrmNORFlash</STRONG> (ARM, 48 bytes, Stack size 0 bytes, utils.o(.text))
<BR>[Called By]<UL><LI><a href="#[31c162c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CopyCode2Ram
</UL><P><STRONG><a name="[31c162c]"></a>CopyCode2Ram</STRONG> (ARM, 84 bytes, Stack size 16 bytes, utils.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31f0c80]">&gt&gt</a>&nbsp;&nbsp;&nbsp;isBootFrmNORFlash
</UL><BR>[Called By]<UL><LI><a href="#[31c326c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Start
</UL><P><STRONG><a name="[31bc5dc]"></a>Timer0_init</STRONG> (ARM, 84 bytes, Stack size 0 bytes, time0_init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31bc570]">&gt&gt</a>&nbsp;&nbsp;&nbsp;printk
</UL><BR>[Called By]<UL><LI><a href="#[31c15c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xmain
</UL><P><STRONG><a name="[31ef4c8]"></a>Timer0_start</STRONG> (ARM, 20 bytes, Stack size 0 bytes, time0_init.o(.text), UNUSED)
<P><STRONG><a name="[31ef458]"></a>Timer0_stop</STRONG> (ARM, 20 bytes, Stack size 0 bytes, time0_init.o(.text), UNUSED)
<P><STRONG><a name="[31ee1cc]"></a>putc</STRONG> (ARM, 24 bytes, Stack size 0 bytes, serial.o(.text))
<BR>[Called By]<UL><LI><a href="#[31bc570]">&lt&lt</a>&nbsp;&nbsp;&nbsp;printk
<LI><a href="#[4541e64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xtos
<LI><a href="#[4549424]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dtos
</UL><P><STRONG><a name="[31bc570]"></a>printk</STRONG> (ARM, 52 bytes, Stack size 8 bytes, serial.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31ee1cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;putc
</UL><BR>[Called By]<UL><LI><a href="#[31c15c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xmain
<LI><a href="#[31bc5dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Timer0_init
<LI><a href="#[31bc878]">&lt&lt</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[31bc808]">&lt&lt</a>&nbsp;&nbsp;&nbsp;led_init
<LI><a href="#[31ec82c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;led_on
<LI><a href="#[31bc798]">&lt&lt</a>&nbsp;&nbsp;&nbsp;key_init
<LI><a href="#[31bc64c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;irq_init
<LI><a href="#[31c1550]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_irq
<LI><a href="#[31c14e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;undef_excp
<LI><a href="#[31c146c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prefetch_abt
<LI><a href="#[31c13fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;data_abt
<LI><a href="#[31bc500]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sched_init
<LI><a href="#[4549490]">&lt&lt</a>&nbsp;&nbsp;&nbsp;schedule
<LI><a href="#[454de80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;kill_task
<LI><a href="#[454df64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_timer
<LI><a href="#[454def0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;OSCreateProcess
<LI><a href="#[4541cac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mem_dump
<LI><a href="#[454bdbc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;stack_dump
<LI><a href="#[454f358]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_exit
<LI><a href="#[454f278]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_sleep
<LI><a href="#[454f198]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_write
<LI><a href="#[454f0b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_led_on
<LI><a href="#[454efd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_all_led_off
<LI><a href="#[454eee8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_all_led_on
</UL><P><STRONG><a name="[31bc878]"></a>uart_init</STRONG> (ARM, 92 bytes, Stack size 0 bytes, serial.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31bc570]">&gt&gt</a>&nbsp;&nbsp;&nbsp;printk
</UL><BR>[Called By]<UL><LI><a href="#[31c15c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xmain
</UL><P><STRONG><a name="[31ee160]"></a>getc</STRONG> (ARM, 28 bytes, Stack size 0 bytes, serial.o(.text), UNUSED)
<P><STRONG><a name="[31ec898]"></a>all_led_on</STRONG> (ARM, 20 bytes, Stack size 0 bytes, led.o(.text))
<BR>[Called By]<UL><LI><a href="#[31bc808]">&lt&lt</a>&nbsp;&nbsp;&nbsp;led_init
<LI><a href="#[454eee8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_all_led_on
</UL><P><STRONG><a name="[31bc808]"></a>led_init</STRONG> (ARM, 48 bytes, Stack size 8 bytes, led.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31ec898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;all_led_on
<LI><a href="#[31bc570]">&gt&gt</a>&nbsp;&nbsp;&nbsp;printk
</UL><BR>[Called By]<UL><LI><a href="#[31c15c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xmain
</UL><P><STRONG><a name="[31ec82c]"></a>led_on</STRONG> (ARM, 144 bytes, Stack size 0 bytes, led.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31bc570]">&gt&gt</a>&nbsp;&nbsp;&nbsp;printk
</UL><BR>[Called By]<UL><LI><a href="#[454f0b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_led_on
</UL><P><STRONG><a name="[31ec7bc]"></a>all_led_off</STRONG> (ARM, 20 bytes, Stack size 0 bytes, led.o(.text))
<BR>[Called By]<UL><LI><a href="#[454efd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_all_led_off
</UL><P><STRONG><a name="[31bc798]"></a>key_init</STRONG> (ARM, 72 bytes, Stack size 0 bytes, key.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31bc570]">&gt&gt</a>&nbsp;&nbsp;&nbsp;printk
</UL><BR>[Called By]<UL><LI><a href="#[31c15c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xmain
</UL><P><STRONG><a name="[31bc64c]"></a>irq_init</STRONG> (ARM, 96 bytes, Stack size 0 bytes, irq_init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31bc570]">&gt&gt</a>&nbsp;&nbsp;&nbsp;printk
</UL><BR>[Called By]<UL><LI><a href="#[31c15c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xmain
</UL><P><STRONG><a name="[31c1550]"></a>handle_irq</STRONG> (ARM, 440 bytes, Stack size 16 bytes, interrupt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[454df64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;do_timer
<LI><a href="#[31bc570]">&gt&gt</a>&nbsp;&nbsp;&nbsp;printk
<LI><a href="#[454def0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;OSCreateProcess
<LI><a href="#[454de80]">&gt&gt</a>&nbsp;&nbsp;&nbsp;kill_task
</UL><BR>[Address Reference Count : 1]<UL><LI> start.o(Start)
</UL><P><STRONG><a name="[31c14e0]"></a>undef_excp</STRONG> (ARM, 84 bytes, Stack size 8 bytes, excp_handle.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31bc570]">&gt&gt</a>&nbsp;&nbsp;&nbsp;printk
<LI><a href="#[454bdbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;stack_dump
<LI><a href="#[454bd4c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;buzzer_on
</UL><BR>[Address Reference Count : 1]<UL><LI> start.o(Start)
</UL><P><STRONG><a name="[31c146c]"></a>prefetch_abt</STRONG> (ARM, 72 bytes, Stack size 8 bytes, excp_handle.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31bc570]">&gt&gt</a>&nbsp;&nbsp;&nbsp;printk
<LI><a href="#[454bdbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;stack_dump
<LI><a href="#[454bd4c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;buzzer_on
</UL><BR>[Address Reference Count : 1]<UL><LI> start.o(Start)
</UL><P><STRONG><a name="[31c13fc]"></a>data_abt</STRONG> (ARM, 68 bytes, Stack size 8 bytes, excp_handle.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31bc570]">&gt&gt</a>&nbsp;&nbsp;&nbsp;printk
<LI><a href="#[454bdbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;stack_dump
<LI><a href="#[454bd4c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;buzzer_on
</UL><BR>[Address Reference Count : 1]<UL><LI> start.o(Start)
</UL><P><STRONG><a name="[31bc500]"></a>sched_init</STRONG> (ARM, 164 bytes, Stack size 0 bytes, schedule.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31bc570]">&gt&gt</a>&nbsp;&nbsp;&nbsp;printk
</UL><BR>[Called By]<UL><LI><a href="#[31c15c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xmain
</UL><P><STRONG><a name="[4549490]"></a>schedule</STRONG> (ARM, 364 bytes, Stack size 16 bytes, schedule.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31bc570]">&gt&gt</a>&nbsp;&nbsp;&nbsp;printk
<LI><a href="#[4549424]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dtos
<LI><a href="#[31e8454]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__switch_to
</UL><BR>[Called By]<UL><LI><a href="#[454de80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;kill_task
<LI><a href="#[454df64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_timer
<LI><a href="#[454f358]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_exit
<LI><a href="#[454f278]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_sleep
</UL><P><STRONG><a name="[454de80]"></a>kill_task</STRONG> (ARM, 164 bytes, Stack size 8 bytes, schedule.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31bc570]">&gt&gt</a>&nbsp;&nbsp;&nbsp;printk
<LI><a href="#[4549490]">&gt&gt</a>&nbsp;&nbsp;&nbsp;schedule
</UL><BR>[Called By]<UL><LI><a href="#[31c1550]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_irq
</UL><P><STRONG><a name="[45493ac]"></a>is_in_user_space</STRONG> (ARM, 32 bytes, Stack size 0 bytes, schedule.o(.text))
<BR>[Called By]<UL><LI><a href="#[454df64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_timer
</UL><P><STRONG><a name="[454df64]"></a>do_timer</STRONG> (ARM, 220 bytes, Stack size 16 bytes, schedule.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31bc570]">&gt&gt</a>&nbsp;&nbsp;&nbsp;printk
<LI><a href="#[45493ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;is_in_user_space
<LI><a href="#[4549490]">&gt&gt</a>&nbsp;&nbsp;&nbsp;schedule
</UL><BR>[Called By]<UL><LI><a href="#[31c1550]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_irq
</UL><P><STRONG><a name="[4549338]"></a>CopyCode2Ram2</STRONG> (ARM, 48 bytes, Stack size 0 bytes, schedule.o(.text))
<BR>[Called By]<UL><LI><a href="#[454def0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;OSCreateProcess
</UL><P><STRONG><a name="[45492c4]"></a>getTaskMemSpace</STRONG> (ARM, 36 bytes, Stack size 0 bytes, schedule.o(.text))
<BR>[Called By]<UL><LI><a href="#[454def0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;OSCreateProcess
</UL><P><STRONG><a name="[454def0]"></a>OSCreateProcess</STRONG> (ARM, 624 bytes, Stack size 40 bytes, schedule.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31bc570]">&gt&gt</a>&nbsp;&nbsp;&nbsp;printk
<LI><a href="#[45492c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;getTaskMemSpace
<LI><a href="#[4549338]">&gt&gt</a>&nbsp;&nbsp;&nbsp;CopyCode2Ram2
</UL><BR>[Called By]<UL><LI><a href="#[31c1550]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_irq
</UL><P><STRONG><a name="[31bc728]"></a>init_buzzer</STRONG> (ARM, 28 bytes, Stack size 0 bytes, buzzer.o(.text))
<BR>[Called By]<UL><LI><a href="#[31c15c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xmain
</UL><P><STRONG><a name="[454bd4c]"></a>buzzer_on</STRONG> (ARM, 24 bytes, Stack size 0 bytes, buzzer.o(.text))
<BR>[Called By]<UL><LI><a href="#[31c14e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;undef_excp
<LI><a href="#[31c146c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prefetch_abt
<LI><a href="#[31c13fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;data_abt
<LI><a href="#[31bc6bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;beep
</UL><P><STRONG><a name="[45442fc]"></a>buzzer_off</STRONG> (ARM, 24 bytes, Stack size 0 bytes, buzzer.o(.text))
<BR>[Called By]<UL><LI><a href="#[31bc6bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;beep
</UL><P><STRONG><a name="[31bc6bc]"></a>beep</STRONG> (ARM, 40 bytes, Stack size 4 bytes, buzzer.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[454bd4c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;buzzer_on
<LI><a href="#[45442fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;buzzer_off
</UL><BR>[Called By]<UL><LI><a href="#[31c15c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xmain
</UL><P><STRONG><a name="[4541e64]"></a>xtos</STRONG> (ARM, 56 bytes, Stack size 8 bytes, libs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4541e64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xtos
<LI><a href="#[31ee1cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;putc
</UL><BR>[Called By]<UL><LI><a href="#[4541e64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xtos
<LI><a href="#[4549424]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dtos
<LI><a href="#[4541cac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mem_dump
<LI><a href="#[454bdbc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;stack_dump
</UL><P><STRONG><a name="[4549424]"></a>dtos</STRONG> (ARM, 40 bytes, Stack size 8 bytes, libs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4541df4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv10
<LI><a href="#[4541e64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xtos
<LI><a href="#[31ee1cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;putc
</UL><BR>[Called By]<UL><LI><a href="#[4549490]">&lt&lt</a>&nbsp;&nbsp;&nbsp;schedule
</UL><P><STRONG><a name="[4541d88]"></a>memset</STRONG> (ARM, 40 bytes, Stack size 0 bytes, libs.o(.text), UNUSED)
<P><STRONG><a name="[4541d1c]"></a>memcpy</STRONG> (ARM, 64 bytes, Stack size 0 bytes, libs.o(.text), UNUSED)
<P><STRONG><a name="[4541cac]"></a>mem_dump</STRONG> (ARM, 124 bytes, Stack size 16 bytes, libs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31bc570]">&gt&gt</a>&nbsp;&nbsp;&nbsp;printk
<LI><a href="#[4541e64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xtos
<LI><a href="#[4541c3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
</UL><P><STRONG><a name="[454bdbc]"></a>stack_dump</STRONG> (ARM, 488 bytes, Stack size 8 bytes, libs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31bc570]">&gt&gt</a>&nbsp;&nbsp;&nbsp;printk
<LI><a href="#[4541e64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xtos
</UL><BR>[Called By]<UL><LI><a href="#[31c14e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;undef_excp
<LI><a href="#[31c146c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prefetch_abt
<LI><a href="#[31c13fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;data_abt
</UL><P><STRONG><a name="[454f358]"></a>do_exit</STRONG> (ARM, 84 bytes, Stack size 8 bytes, system_call.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31bc570]">&gt&gt</a>&nbsp;&nbsp;&nbsp;printk
<LI><a href="#[4549490]">&gt&gt</a>&nbsp;&nbsp;&nbsp;schedule
</UL><BR>[Address Reference Count : 1]<UL><LI> swi_handle_s3c2440.o(SWI)
</UL><P><STRONG><a name="[454f278]"></a>do_sleep</STRONG> (ARM, 80 bytes, Stack size 8 bytes, system_call.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31bc570]">&gt&gt</a>&nbsp;&nbsp;&nbsp;printk
<LI><a href="#[4549490]">&gt&gt</a>&nbsp;&nbsp;&nbsp;schedule
</UL><BR>[Address Reference Count : 1]<UL><LI> swi_handle_s3c2440.o(SWI)
</UL><P><STRONG><a name="[454f198]"></a>do_write</STRONG> (ARM, 48 bytes, Stack size 8 bytes, system_call.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31bc570]">&gt&gt</a>&nbsp;&nbsp;&nbsp;printk
</UL><BR>[Address Reference Count : 1]<UL><LI> swi_handle_s3c2440.o(SWI)
</UL><P><STRONG><a name="[454f0b8]"></a>do_led_on</STRONG> (ARM, 52 bytes, Stack size 8 bytes, system_call.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31bc570]">&gt&gt</a>&nbsp;&nbsp;&nbsp;printk
<LI><a href="#[31ec82c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;led_on
</UL><BR>[Address Reference Count : 1]<UL><LI> swi_handle_s3c2440.o(SWI)
</UL><P><STRONG><a name="[454efd0]"></a>do_all_led_off</STRONG> (ARM, 44 bytes, Stack size 8 bytes, system_call.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31bc570]">&gt&gt</a>&nbsp;&nbsp;&nbsp;printk
<LI><a href="#[31ec7bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;all_led_off
</UL><BR>[Address Reference Count : 1]<UL><LI> swi_handle_s3c2440.o(SWI)
</UL><P><STRONG><a name="[454eee8]"></a>do_all_led_on</STRONG> (ARM, 44 bytes, Stack size 8 bytes, system_call.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31bc570]">&gt&gt</a>&nbsp;&nbsp;&nbsp;printk
<LI><a href="#[31ec898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;all_led_on
</UL><BR>[Address Reference Count : 1]<UL><LI> swi_handle_s3c2440.o(SWI)
</UL><P><STRONG><a name="[4558eb8]"></a>__16__rt_sdiv</STRONG> (Thumb, 216 bytes, Stack size 0 bytes, rt_sdiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4558f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_div0 (via BX)
</UL><P><STRONG><a name="[4541c3c]"></a>__rt_sdiv</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_sdiv.o(.text), UNUSED)
<BR>[Called By]<UL><LI><a href="#[4541cac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mem_dump
</UL><P><STRONG><a name="[4558a3c]"></a>__16__rt_udiv10</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, rtudiv10.o(.text), UNUSED)
<P><STRONG><a name="[4541df4]"></a>__rt_udiv10</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rtudiv10.o(.text))
<BR>[Called By]<UL><LI><a href="#[4549424]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dtos
</UL><P><STRONG><a name="[4558610]"></a>__16__rt_div0</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rt_div0.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[45581a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__32__rt_raise (via BX)
</UL><P><STRONG><a name="[4558f2c]"></a>__rt_div0</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_div0.o(.text), UNUSED)
<BR>[Called By]<UL><LI><a href="#[4558eb8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__16__rt_sdiv
</UL><P><STRONG><a name="[4558684]"></a>__rt_raise</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, rt_raise.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4558284]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__raise (via Veneer)
<LI><a href="#[4558214]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_sys_exit (via BX)
</UL><P><STRONG><a name="[45581a0]"></a>__32__rt_raise</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_raise.o(.text), UNUSED)
<BR>[Called By]<UL><LI><a href="#[4558610]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__16__rt_div0
</UL><P><STRONG><a name="[4558284]"></a>__raise</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, __raise.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4557c14]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__sigvec_lookup (Weak Reference)
<LI><a href="#[4557d68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__default_signal_handler
<LI><a href="#[4557ba0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__call_via_r2
</UL><BR>[Called By]<UL><LI><a href="#[4558684]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_raise (via Veneer)
</UL><P><STRONG><a name="[45575a8]"></a>__16_sys_exit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sys_exit.o(.text), UNUSED)
<P><STRONG><a name="[4558214]"></a>_sys_exit</STRONG> (ARM, 0 bytes, Stack size 0 bytes, sys_exit.o(.text), UNUSED)
<BR>[Called By]<UL><LI><a href="#[4558684]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_raise
</UL><P><STRONG><a name="[4557190]"></a>__call_via_r0</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, callvia.o(.text), UNUSED)
<P><STRONG><a name="[455711c]"></a>__call_via_r1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, callvia.o(.text), UNUSED)
<P><STRONG><a name="[4557ba0]"></a>__call_via_r2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, callvia.o(.text), UNUSED)
<BR>[Called By]<UL><LI><a href="#[4558284]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__raise
</UL><P><STRONG><a name="[45570a8]"></a>__call_via_r3</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, callvia.o(.text), UNUSED)
<P><STRONG><a name="[4557034]"></a>__call_via_r4</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, callvia.o(.text), UNUSED)
<P><STRONG><a name="[4556fc0]"></a>__call_via_r5</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, callvia.o(.text), UNUSED)
<P><STRONG><a name="[4556f4c]"></a>__call_via_r6</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, callvia.o(.text), UNUSED)
<P><STRONG><a name="[4556ed8]"></a>__call_via_r7</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, callvia.o(.text), UNUSED)
<P><STRONG><a name="[4557d68]"></a>__default_signal_handler</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, defsig.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4556b30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL><BR>[Called By]<UL><LI><a href="#[4558284]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__raise
</UL><P><STRONG><a name="[455752c]"></a>__I_use_semihosting_swi</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, use_semi.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sys_exit.o(.text)
</UL><P><STRONG><a name="[4556100]"></a>__semihosting_swi_guard</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_semi.o(.text), UNUSED)
<P><STRONG><a name="[4556080]"></a>__32__I_use_semihosting_swi</STRONG> (ARM, 0 bytes, Stack size 0 bytes, use_semi.o(.text), UNUSED)
<P><STRONG><a name="[4556b30]"></a>_ttywrch</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, sys_wrch.o(.text), UNUSED)
<BR>[Called By]<UL><LI><a href="#[4557d68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__default_signal_handler
</UL><P><STRONG><a name="[31c1308]"></a>__enable_mmu</STRONG> (ARM, 0 bytes, Stack size 0 bytes, mmu.o(MMU_INIT))
<BR>[Address Reference Count : 1]<UL><LI> start.o(Start)
</UL><P><STRONG><a name="[31c16a0]"></a>HandleSWI</STRONG> (ARM, 0 bytes, Stack size 0 bytes, swi_handle_s3c2440.o(SWI))
<BR>[Called By]<UL><LI><a href="#[31c326c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Start
</UL><P><STRONG><a name="[454f3c4]"></a>sys_exit</STRONG> (ARM, 0 bytes, Stack size 0 bytes, swi_handle_s3c2440.o(SWI))
<BR>[Address Reference Count : 1]<UL><LI> system_call.o(.data)
</UL><P><STRONG><a name="[454f2e8]"></a>sys_sleep</STRONG> (ARM, 0 bytes, Stack size 0 bytes, swi_handle_s3c2440.o(SWI))
<BR>[Address Reference Count : 1]<UL><LI> system_call.o(.data)
</UL><P><STRONG><a name="[454f208]"></a>sys_write</STRONG> (ARM, 0 bytes, Stack size 0 bytes, swi_handle_s3c2440.o(SWI))
<BR>[Address Reference Count : 1]<UL><LI> system_call.o(.data)
</UL><P><STRONG><a name="[454f128]"></a>sys_led_on</STRONG> (ARM, 0 bytes, Stack size 0 bytes, swi_handle_s3c2440.o(SWI))
<BR>[Address Reference Count : 1]<UL><LI> system_call.o(.data)
</UL><P><STRONG><a name="[454f044]"></a>sys_all_led_off</STRONG> (ARM, 0 bytes, Stack size 0 bytes, swi_handle_s3c2440.o(SWI))
<BR>[Address Reference Count : 1]<UL><LI> system_call.o(.data)
</UL><P><STRONG><a name="[454ef5c]"></a>sys_all_led_on</STRONG> (ARM, 0 bytes, Stack size 0 bytes, swi_handle_s3c2440.o(SWI))
<BR>[Address Reference Count : 1]<UL><LI> system_call.o(.data)
</UL><P><STRONG><a name="[31e8454]"></a>__switch_to</STRONG> (ARM, 0 bytes, Stack size 0 bytes, context_switch.o(SWITCH))
<BR>[Called By]<UL><LI><a href="#[4549490]">&lt&lt</a>&nbsp;&nbsp;&nbsp;schedule
</UL><P><STRONG><a name="[31c326c]"></a>Start</STRONG> (ARM, 612 bytes, Stack size 0 bytes, start.o(Start))
<BR><BR>[Calls]<UL><LI><a href="#[31c311c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Reset
<LI><a href="#[31c29a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;HandleUndef
<LI><a href="#[31c16a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;HandleSWI
<LI><a href="#[31c2930]">&gt&gt</a>&nbsp;&nbsp;&nbsp;HandlePrefetchAbort
<LI><a href="#[31c28bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;HandleDataAbort
<LI><a href="#[31c31f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;HandleNotUsed
<LI><a href="#[31c2e88]">&gt&gt</a>&nbsp;&nbsp;&nbsp;HandleIRQ
<LI><a href="#[31c3188]">&gt&gt</a>&nbsp;&nbsp;&nbsp;HandleFIQ
<LI><a href="#[31c2da8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;clock_init
<LI><a href="#[31c2d38]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mem_init
<LI><a href="#[31c2a88]">&gt&gt</a>&nbsp;&nbsp;&nbsp;disable_watchdog
<LI><a href="#[31c162c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;CopyCode2Ram
<LI><a href="#[31c2be0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;clear_bss_region
<LI><a href="#[31c2f64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[31c137c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__create_page_tables_early
<LI><a href="#[31c1288]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__create_page_tables_post
<LI><a href="#[31c2a18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;stack_init
<LI><a href="#[31c2fd0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;halt_loop
<LI><a href="#[31c2ef8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;loop
<LI><a href="#[31c2cc4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mem_init_loop
<LI><a href="#[31c2b00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;quit_loop
<LI><a href="#[31c2b70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;clear_loop
</UL><BR>[Address Reference Count : 1]<UL><LI> start.o(Start)
</UL><P><STRONG><a name="[31c31f8]"></a>HandleNotUsed</STRONG> (ARM, 0 bytes, Stack size 0 bytes, start.o(Start))
<BR>[Called By]<UL><LI><a href="#[31c326c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Start
</UL><P><STRONG><a name="[31c3188]"></a>HandleFIQ</STRONG> (ARM, 0 bytes, Stack size 0 bytes, start.o(Start))
<BR>[Called By]<UL><LI><a href="#[31c326c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Start
</UL><P><STRONG><a name="[31c311c]"></a>Reset</STRONG> (ARM, 0 bytes, Stack size 0 bytes, start.o(Start))
<BR>[Called By]<UL><LI><a href="#[31c326c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Start
</UL><P><STRONG><a name="[31c30ac]"></a>copy_code</STRONG> (ARM, 0 bytes, Stack size 0 bytes, start.o(Start), UNUSED)
<P><STRONG><a name="[31c3040]"></a>RUN_VM</STRONG> (ARM, 0 bytes, Stack size 0 bytes, start.o(Start), UNUSED)
<P><STRONG><a name="[31c2fd0]"></a>halt_loop</STRONG> (ARM, 0 bytes, Stack size 0 bytes, start.o(Start))
<BR>[Called By]<UL><LI><a href="#[31c326c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Start
</UL><P><STRONG><a name="[31c2f64]"></a>delay</STRONG> (ARM, 0 bytes, Stack size 0 bytes, start.o(Start))
<BR>[Called By]<UL><LI><a href="#[31c326c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Start
</UL><P><STRONG><a name="[31c2ef8]"></a>loop</STRONG> (ARM, 0 bytes, Stack size 0 bytes, start.o(Start))
<BR>[Called By]<UL><LI><a href="#[31c326c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Start
</UL><P><STRONG><a name="[31c2e88]"></a>HandleIRQ</STRONG> (ARM, 0 bytes, Stack size 0 bytes, start.o(Start))
<BR>[Called By]<UL><LI><a href="#[31c326c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Start
</UL><P><STRONG><a name="[31c2e18]"></a>int_return</STRONG> (ARM, 0 bytes, Stack size 0 bytes, start.o(Start), UNUSED)
<P><STRONG><a name="[31c2da8]"></a>clock_init</STRONG> (ARM, 0 bytes, Stack size 0 bytes, start.o(Start))
<BR>[Called By]<UL><LI><a href="#[31c326c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Start
</UL><P><STRONG><a name="[31c2d38]"></a>mem_init</STRONG> (ARM, 0 bytes, Stack size 0 bytes, start.o(Start))
<BR>[Called By]<UL><LI><a href="#[31c326c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Start
</UL><P><STRONG><a name="[31c2cc4]"></a>mem_init_loop</STRONG> (ARM, 0 bytes, Stack size 0 bytes, start.o(Start))
<BR>[Called By]<UL><LI><a href="#[31c326c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Start
</UL><P><STRONG><a name="[31c2be0]"></a>clear_bss_region</STRONG> (ARM, 0 bytes, Stack size 0 bytes, start.o(Start))
<BR>[Called By]<UL><LI><a href="#[31c326c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Start
</UL><P><STRONG><a name="[31c2b70]"></a>clear_loop</STRONG> (ARM, 0 bytes, Stack size 0 bytes, start.o(Start))
<BR>[Called By]<UL><LI><a href="#[31c326c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Start
</UL><P><STRONG><a name="[31c2b00]"></a>quit_loop</STRONG> (ARM, 0 bytes, Stack size 0 bytes, start.o(Start))
<BR>[Called By]<UL><LI><a href="#[31c326c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Start
</UL><P><STRONG><a name="[31c2a88]"></a>disable_watchdog</STRONG> (ARM, 0 bytes, Stack size 0 bytes, start.o(Start))
<BR>[Called By]<UL><LI><a href="#[31c326c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Start
</UL><P><STRONG><a name="[31c2a18]"></a>stack_init</STRONG> (ARM, 0 bytes, Stack size 0 bytes, start.o(Start))
<BR>[Called By]<UL><LI><a href="#[31c326c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Start
</UL><P><STRONG><a name="[31c29a8]"></a>HandleUndef</STRONG> (ARM, 0 bytes, Stack size 0 bytes, start.o(Start))
<BR>[Called By]<UL><LI><a href="#[31c326c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Start
</UL><P><STRONG><a name="[31c2930]"></a>HandlePrefetchAbort</STRONG> (ARM, 0 bytes, Stack size 0 bytes, start.o(Start))
<BR>[Called By]<UL><LI><a href="#[31c326c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Start
</UL><P><STRONG><a name="[31c28bc]"></a>HandleDataAbort</STRONG> (ARM, 0 bytes, Stack size 0 bytes, start.o(Start))
<BR>[Called By]<UL><LI><a href="#[31c326c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Start
</UL><P><STRONG><a name="[454fdf4]"></a>SWI</STRONG> (ARM, 104 bytes, Stack size 0 bytes, swi_handle_s3c2440.o(SWI))
<BR>[Address Reference Count : 1]<UL><LI> swi_handle_s3c2440.o(SWI)
</UL><P><STRONG><a name="[454fd84]"></a>swi_return</STRONG> (ARM, 0 bytes, Stack size 0 bytes, swi_handle_s3c2440.o(SWI), UNUSED)
<P><STRONG><a name="[31e90bc]"></a>do_switch</STRONG> (ARM, 0 bytes, Stack size 0 bytes, context_switch.o(SWITCH), UNUSED)
<P><STRONG><a name="[4557c14]"></a>__sigvec_lookup</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR>[Called By]<UL><LI><a href="#[4558284]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__raise (Weak Reference)
</UL><HR></body></html>